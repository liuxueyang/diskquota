-- Test that diskquota is able to cancel a running CTAS query by the tablespace schema quota.
SELECT diskquota.enable_hardlimit();
 enable_hardlimit 
------------------
 
(1 row)

-- start_ignore
\! mkdir -p /tmp/ctas_schemaspc
-- end_ignore
-- prepare tablespace and schema
DROP TABLESPACE IF EXISTS ctas_schemaspc;
NOTICE:  tablespace "ctas_schemaspc" does not exist, skipping
CREATE TABLESPACE ctas_schemaspc LOCATION '/tmp/ctas_schemaspc';
CREATE SCHEMA hardlimit_s;
SELECT diskquota.set_schema_tablespace_quota('hardlimit_s', 'ctas_schemaspc', '1 MB');
 set_schema_tablespace_quota 
-----------------------------
 
(1 row)

SET search_path TO hardlimit_s;
SET default_tablespace = ctas_schemaspc;
-- heap table
CREATE TABLE t1 AS SELECT generate_series(1, 100000000);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'generate_series' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
[hardlimit] tablespace-schema's disk space quota exceeded
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- toast table
CREATE TABLE toast_table
  AS SELECT ARRAY(SELECT generate_series(1,10000)) FROM generate_series(1, 100000);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'array' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
[hardlimit] tablespace-schema's disk space quota exceeded
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- ao table
CREATE TABLE ao_table WITH (appendonly=true) AS SELECT generate_series(1, 100000000);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'generate_series' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
[hardlimit] tablespace-schema's disk space quota exceeded
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- aocs table
CREATE TABLE aocs_table WITH (appendonly=true, orientation=column)
  AS SELECT i, ARRAY(SELECT generate_series(1,10000)) FROM generate_series(1, 100000) AS i;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
[hardlimit] tablespace-schema's disk space quota exceeded
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- disable hardlimit and do some clean-ups
DROP TABLE IF EXISTS t1;
NOTICE:  table "t1" does not exist, skipping
DROP TABLE IF EXISTS t2;
NOTICE:  table "t2" does not exist, skipping
DROP TABLE IF EXISTS toast_table;
NOTICE:  table "toast_table" does not exist, skipping
DROP TABLE IF EXISTS ao_table;
NOTICE:  table "ao_table" does not exist, skipping
DROP TABLE IF EXISTS aocs_table;
NOTICE:  table "aocs_table" does not exist, skipping
RESET search_path;
RESET default_tablespace;
DROP SCHEMA hardlimit_s;
DROP TABLESPACE ctas_schemaspc;
SELECT diskquota.disable_hardlimit();
 disable_hardlimit 
-------------------
 
(1 row)

